"""
–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
–§–∞–∑–∞ 5: –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from typing import Dict, List, Optional, Any, Callable
import logging
from datetime import datetime
from dataclasses import dataclass

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from ..services.user_context_service import UserContextService, UserContext, UserContextType, ActivityLevel, ExperienceLevel
from ..services.passport_database_service import PassportDatabaseService
from ..services.clan_database_service import ClanDatabaseService
from ..utils.formatting import format_user_greeting, format_contextual_help

router = Router()
logger = logging.getLogger(__name__)


@dataclass
class ContextualCommand:
    """–ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø–æ–∫–∞–∑–∞"""
    
    command: str
    title: str
    description: str
    icon: str
    
    # –£—Å–ª–æ–≤–∏—è –ø–æ–∫–∞–∑–∞
    required_context_types: List[UserContextType] = None
    min_activity_level: ActivityLevel = None
    min_experience_level: ExperienceLevel = None
    requires_admin: bool = False
    requires_clan_membership: bool = False
    requires_player_binding: bool = False
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
    priority: int = 0
    category: str = "general"


class ContextualCommandSystem:
    """–°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    
    def __init__(self):
        self.context_service = UserContextService()
        self.passport_service = PassportDatabaseService()
        self.clan_service = ClanDatabaseService()
        
        # –†–µ–≥–∏—Å—Ç—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        self.commands_registry = self._initialize_commands_registry()
    
    def _initialize_commands_registry(self) -> Dict[str, ContextualCommand]:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
        
        return {
            # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            'welcome_setup': ContextualCommand(
                command='welcome_setup',
                title='üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                description='–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                icon='üéâ',
                required_context_types=[UserContextType.NEW_USER],
                priority=10,
                category='onboarding'
            ),
            
            'create_passport_guided': ContextualCommand(
                command='create_passport_guided',
                title='üìã –°–æ–∑–¥–∞—Ç—å –ø–∞—Å–ø–æ—Ä—Ç',
                description='–ü–æ—à–∞–≥–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏',
                icon='üìã',
                required_context_types=[UserContextType.NEW_USER],
                priority=9,
                category='onboarding'
            ),
            
            # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏
            'binding_assistant': ContextualCommand(
                command='binding_assistant',
                title='üéÆ –ü–æ–º–æ—â–Ω–∏–∫ –ø—Ä–∏–≤—è–∑–∫–∏',
                description='–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ –∏–≥—Ä–æ–∫–∞',
                icon='üéÆ',
                required_context_types=[UserContextType.UNBOUND_USER],
                priority=8,
                category='binding'
            ),
            
            'quick_clan_join': ContextualCommand(
                command='quick_clan_join',
                title='üè∞ –ë—ã—Å—Ç—Ä–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω',
                description='–ü–æ–¥–±–æ—Ä –∫–ª–∞–Ω–∞ –∏ –±—ã—Å—Ç—Ä–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
                icon='üè∞',
                required_context_types=[UserContextType.UNBOUND_USER, UserContextType.EXTERNAL_PLAYER],
                priority=7,
                category='clan'
            ),
            
            # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            'verification_status': ContextualCommand(
                command='verification_status',
                title='‚è≥ –°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                description='–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –ø–æ–º–æ—â—å',
                icon='‚è≥',
                required_context_types=[UserContextType.PENDING_VERIFICATION],
                priority=8,
                category='verification'
            ),
            
            'speed_up_verification': ContextualCommand(
                command='speed_up_verification',
                title='üöÄ –£—Å–∫–æ—Ä–∏—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é',
                description='–°–æ–≤–µ—Ç—ã –ø–æ —É—Å–∫–æ—Ä–µ–Ω–∏—é –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                icon='üöÄ',
                required_context_types=[UserContextType.PENDING_VERIFICATION],
                priority=7,
                category='verification'
            ),
            
            # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            'my_progress': ContextualCommand(
                command='my_progress',
                title='üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å',
                description='–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                icon='üìà',
                requires_player_binding=True,
                min_activity_level=ActivityLevel.LOW,
                priority=6,
                category='progress'
            ),
            
            'clan_activities': ContextualCommand(
                command='clan_activities',
                title='üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª–∞–Ω–∞',
                description='–¢–µ–∫—É—â–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –∑–∞–¥–∞—á–∏ –∫–ª–∞–Ω–∞',
                icon='üéØ',
                requires_clan_membership=True,
                priority=5,
                category='clan'
            ),
            
            'personalized_tips': ContextualCommand(
                command='personalized_tips',
                title='üí° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã',
                description='–°–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∏–≥—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Å—Ç–∏–ª—è',
                icon='üí°',
                requires_player_binding=True,
                min_experience_level=ExperienceLevel.NOVICE,
                priority=4,
                category='tips'
            ),
            
            # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–∏–¥–µ—Ä–æ–≤ –∏ —Å—Ç–∞—Ä–µ–π—à–∏–Ω
            'leadership_tools': ContextualCommand(
                command='leadership_tools',
                title='üëë –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ª–∏–¥–µ—Ä–∞',
                description='–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–Ω–æ–º',
                icon='üëë',
                required_context_types=[UserContextType.CLAN_LEADER, UserContextType.CLAN_COLEADER, UserContextType.CLAN_ELDER],
                priority=9,
                category='leadership'
            ),
            
            'member_mentoring': ContextualCommand(
                command='member_mentoring',
                title='üéì –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ',
                description='–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–º–æ—â–∏ –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º',
                icon='üéì',
                required_context_types=[UserContextType.CLAN_ELDER, UserContextType.CLAN_COLEADER, UserContextType.CLAN_LEADER],
                min_activity_level=ActivityLevel.MEDIUM,
                priority=6,
                category='leadership'
            ),
            
            # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            'admin_dashboard': ContextualCommand(
                command='admin_dashboard',
                title='üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
                description='–ü–æ–ª–Ω–∞—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —á–∞—Ç–∞',
                icon='üîß',
                requires_admin=True,
                priority=10,
                category='admin'
            ),
            
            'chat_analytics': ContextualCommand(
                command='chat_analytics',
                title='üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —á–∞—Ç–∞',
                description='–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —á–∞—Ç–∞',
                icon='üìä',
                requires_admin=True,
                priority=8,
                category='admin'
            ),
            
            # –ö–æ–º–∞–Ω–¥—ã –ø–æ —É—Ä–æ–≤–Ω—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            'activity_boost': ContextualCommand(
                command='activity_boost',
                title='‚ö° –ü–æ–≤—ã—Å–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                description='–°–æ–≤–µ—Ç—ã –ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç–µ –∏ –∏–≥—Ä–µ',
                icon='‚ö°',
                min_activity_level=ActivityLevel.VERY_LOW,
                priority=3,
                category='engagement'
            ),
            
            'advanced_strategies': ContextualCommand(
                command='advanced_strategies',
                title='üß† –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
                description='–°–ª–æ–∂–Ω—ã–µ —Ç–∞–∫—Ç–∏–∫–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤',
                icon='üß†',
                min_experience_level=ExperienceLevel.ADVANCED,
                min_activity_level=ActivityLevel.HIGH,
                priority=5,
                category='advanced'
            )
        }
    
    async def get_contextual_commands(self, context: UserContext) -> List[ContextualCommand]:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            –°–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–æ–º–∞–Ω–¥, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
        """
        available_commands = []
        
        for command_data in self.commands_registry.values():
            if await self._check_command_availability(command_data, context):
                available_commands.append(command_data)
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (—É–±—ã–≤–∞–Ω–∏–µ)
        available_commands.sort(key=lambda x: x.priority, reverse=True)
        
        return available_commands
    
    async def _check_command_availability(
        self, 
        command: ContextualCommand, 
        context: UserContext
    ) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        if command.required_context_types:
            if context.context_type not in command.required_context_types:
                return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∞
        if command.requires_admin and not context.is_chat_admin:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–ª–µ–Ω—Å—Ç–≤–æ –≤ –∫–ª–∞–Ω–µ
        if command.requires_clan_membership and not context.is_clan_member:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤—è–∑–∫—É –∏–≥—Ä–æ–∫–∞
        if command.requires_player_binding and not context.has_player_binding:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if command.min_activity_level:
            activity_levels = [ActivityLevel.VERY_LOW, ActivityLevel.LOW, ActivityLevel.MEDIUM, ActivityLevel.HIGH, ActivityLevel.VERY_HIGH]
            if activity_levels.index(context.activity_level) < activity_levels.index(command.min_activity_level):
                return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞
        if command.min_experience_level:
            experience_levels = [ExperienceLevel.BEGINNER, ExperienceLevel.NOVICE, ExperienceLevel.INTERMEDIATE, ExperienceLevel.ADVANCED, ExperienceLevel.EXPERT]
            if experience_levels.index(context.experience_level) < experience_levels.index(command.min_experience_level):
                return False
        
        return True
    
    def create_contextual_keyboard(
        self, 
        commands: List[ContextualCommand], 
        user_id: int,
        max_commands: int = 8
    ) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
        
        Args:
            commands: –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            max_commands: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
            
        Returns:
            InlineKeyboardMarkup —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
        """
        builder = InlineKeyboardBuilder()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {}
        for command in commands[:max_commands]:
            if command.category not in categories:
                categories[command.category] = []
            categories[command.category].append(command)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        for category, category_commands in categories.items():
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥ –º–Ω–æ–≥–æ)
            if len(categories) > 1 and len(category_commands) > 1:
                category_names = {
                    'onboarding': 'üéØ –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
                    'binding': 'üéÆ –ü—Ä–∏–≤—è–∑–∫–∞ –∏–≥—Ä–æ–∫–∞',
                    'verification': '‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è',
                    'clan': 'üè∞ –ö–ª–∞–Ω',
                    'progress': 'üìà –ü—Ä–æ–≥—Ä–µ—Å—Å',
                    'leadership': 'üëë –õ–∏–¥–µ—Ä—Å—Ç–≤–æ',
                    'admin': 'üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
                    'tips': 'üí° –°–æ–≤–µ—Ç—ã',
                    'advanced': 'üß† –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ',
                    'engagement': '‚ö° –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                    'general': 'üìã –û–±—â–µ–µ'
                }
                
                category_title = category_names.get(category, f'üìã {category.title()}')
                builder.row(InlineKeyboardButton(
                    text=category_title,
                    callback_data=f"category_info:{category}"
                ))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            for command in category_commands:
                builder.row(InlineKeyboardButton(
                    text=f"{command.icon} {command.title}",
                    callback_data=f"contextual_cmd:{user_id}:{command.command}"
                ))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã"
        if len(commands) > max_commands:
            builder.row(InlineKeyboardButton(
                text=f"üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ ({len(commands)})",
                callback_data=f"show_all_contextual:{user_id}"
            ))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        builder.row(InlineKeyboardButton(
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
            callback_data=f"refresh_contextual:{user_id}"
        ))
        
        return builder.as_markup()


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
contextual_system = ContextualCommandSystem()


@router.message(Command("smart"))
async def smart_command_menu(message: Message):
    """
    –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Usage: /smart
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context = await contextual_system.context_service.get_user_context(
            user_id=message.from_user.id,
            chat_id=message.chat.id
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        commands = await contextual_system.get_contextual_commands(context)
        
        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        greeting = _format_personalized_greeting(context)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = contextual_system.create_contextual_keyboard(
            commands, message.from_user.id
        )
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = (
            f"{greeting}\n\n"
            f"üéØ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:**\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
        if context.personalized_tips:
            message_text += "\nüí° **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:**\n"
            for tip in context.personalized_tips[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                message_text += f"‚Ä¢ {tip}\n"
            message_text += "\n"
        
        message_text += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        
        await message.reply(
            message_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        await contextual_system.context_service.update_user_interaction(
            user_id=message.from_user.id,
            chat_id=message.chat.id,
            command="smart",
            interaction_data={'commands_shown': len(commands)}
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ smart_command_menu: {e}")
        await message.reply(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–Ω—é.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
        )


@router.callback_query(F.data.startswith("contextual_cmd:"))
async def handle_contextual_command(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    try:
        _, user_id_str, command = callback.data.split(":", 2)
        user_id = int(user_id_str)
        
        if callback.from_user.id != user_id:
            await callback.answer("‚ùå –≠—Ç–æ –Ω–µ –≤–∞—à–µ –º–µ–Ω—é!", show_alert=True)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context = await contextual_system.context_service.get_user_context(
            user_id=user_id,
            chat_id=callback.message.chat.id
        )
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É
        await _execute_contextual_command(callback, command, context)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await contextual_system.context_service.update_user_interaction(
            user_id=user_id,
            chat_id=callback.message.chat.id,
            command=command,
            interaction_data={'source': 'contextual_menu'}
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_contextual_command: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã", show_alert=True)


@router.message(Command("my_status"))
async def my_status_command(message: Message):
    """
    –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    Usage: /my_status
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context = await contextual_system.context_service.get_user_context(
            user_id=message.from_user.id,
            chat_id=message.chat.id
        )
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å
        status_text = _format_user_status(context)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
        keyboard = _create_quick_actions_keyboard(context, message.from_user.id)
        
        await message.reply(
            status_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ my_status_command: {e}")
        await message.reply(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à —Å—Ç–∞—Ç—É—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )


@router.message(Command("context_help"))
async def context_help_command(message: Message):
    """
    –ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Usage: /context_help
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context = await contextual_system.context_service.get_user_context(
            user_id=message.from_user.id,
            chat_id=message.chat.id
        )
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å
        help_text = _generate_contextual_help(context)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
        keyboard = _create_help_keyboard(context, message.from_user.id)
        
        await message.reply(
            help_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ context_help_command: {e}")
        await message.reply(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /help –¥–ª—è –æ–±—â–µ–π —Å–ø—Ä–∞–≤–∫–∏."
        )


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

def _format_personalized_greeting(context: UserContext) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    
    greetings = {
        UserContextType.NEW_USER: f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏–º –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç.",
        UserContextType.UNBOUND_USER: f"üéÆ –ü—Ä–∏–≤–µ—Ç! –í—Ä–µ–º—è –ø—Ä–∏–≤—è–∑–∞—Ç—å –∏–≥—Ä–æ–∫–∞ CoC –∫ –≤–∞—à–µ–º—É –ø–∞—Å–ø–æ—Ä—Ç—É.",
        UserContextType.PENDING_VERIFICATION: f"‚è≥ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à–∞ –ø—Ä–∏–≤—è–∑–∫–∞ –æ–∂–∏–¥–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.",
        UserContextType.VERIFIED_MEMBER: f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {_get_player_name(context)}! –í—ã –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫.",
        UserContextType.CLAN_LEADER: f"üëë –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ª–∏–¥–µ—Ä! –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º –∫–ª–∞–Ω–æ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.",
        UserContextType.CLAN_COLEADER: f"üî• –ü—Ä–∏–≤–µ—Ç, —Å–æ-–ª–∏–¥–µ—Ä! –ü–æ–º–æ–≥–∏—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∫–ª–∞–Ω.",
        UserContextType.CLAN_ELDER: f"‚≠ê –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å—Ç–∞—Ä–µ–π—à–∏–Ω–∞! –ù–∞–ø—Ä–∞–≤–ª—è–π—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞.",
        UserContextType.EXTERNAL_PLAYER: f"üåç –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –Ω–∞—à –∫–ª–∞–Ω.",
        UserContextType.INACTIVE_USER: f"üò¥ –î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –∏–≥—Ä–µ?",
        UserContextType.ADMIN_USER: f"üîß –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º."
    }
    
    base_greeting = greetings.get(context.context_type, "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if context.activity_level == ActivityLevel.VERY_HIGH:
        base_greeting += " üåü"
    elif context.activity_level == ActivityLevel.VERY_LOW:
        base_greeting += " üí§"
        
    return base_greeting


def _get_player_name(context: UserContext) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    if context.player_binding:
        return context.player_binding.player_name
    elif context.passport_info:
        return context.passport_info.display_name
    else:
        return "–∏–≥—Ä–æ–∫"


async def _execute_contextual_command(callback: CallbackQuery, command: str, context: UserContext):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã"""
    
    command_handlers = {
        'welcome_setup': _handle_welcome_setup,
        'create_passport_guided': _handle_create_passport_guided,
        'binding_assistant': _handle_binding_assistant,
        'verification_status': _handle_verification_status,
        'my_progress': _handle_my_progress,
        'clan_activities': _handle_clan_activities,
        'leadership_tools': _handle_leadership_tools,
        'admin_dashboard': _handle_admin_dashboard,
        # ... –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    }
    
    handler = command_handlers.get(command)
    if handler:
        await handler(callback, context)
    else:
        await callback.message.edit_text(
            f"üöß –ö–æ–º–∞–Ω–¥–∞ '{command}' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
            f"–°–∫–æ—Ä–æ –æ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!"
        )


async def _handle_welcome_setup(callback: CallbackQuery, context: UserContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –°–æ–∑–¥–∞—Ç—å –ø–∞—Å–ø–æ—Ä—Ç", callback_data=f"create_passport:{callback.from_user.id}")],
        [InlineKeyboardButton(text="üè∞ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–ª–∞–Ω—ã", callback_data=f"view_clans:{callback.from_user.id}")],
        [InlineKeyboardButton(text="‚ùì –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å", callback_data=f"get_help:{callback.from_user.id}")]
    ])
    
    await callback.message.edit_text(
        "üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —á–∞—Ç!**\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω—É–∂–Ω–æ:\n"
        "1Ô∏è‚É£ –°–æ–∑–¥–∞—Ç—å –ª–∏—á–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç\n"
        "2Ô∏è‚É£ –ü—Ä–∏–≤—è–∑–∞—Ç—å –∏–≥—Ä–æ–∫–∞ Clash of Clans\n"
        "3Ô∏è‚É£ –í—ã–±—Ä–∞—Ç—å –∫–ª–∞–Ω –¥–ª—è —É—á–∞—Å—Ç–∏—è\n\n"
        "–° —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å?",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )


async def _handle_verification_status(callback: CallbackQuery, context: UserContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    if context.player_binding:
        binding = context.player_binding
        days_waiting = (datetime.now() - binding.binding_date).days
        
        status_text = (
            f"‚è≥ **–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∞—à–µ–π –ø—Ä–∏–≤—è–∑–∫–∏**\n\n"
            f"üéÆ **–ò–≥—Ä–æ–∫:** {binding.player_name} ({binding.player_tag})\n"
            f"üìÖ **–î–∞—Ç–∞ –ø—Ä–∏–≤—è–∑–∫–∏:** {binding.binding_date.strftime('%d.%m.%Y')}\n"
            f"‚è∞ **–û–∂–∏–¥–∞–Ω–∏–µ:** {days_waiting} –¥–Ω–µ–π\n\n"
        )
        
        if days_waiting < 3:
            status_text += "‚úÖ **–°—Ç–∞—Ç—É—Å:** –í –æ–±—ã—á–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
        elif days_waiting < 7:
            status_text += "‚ö†Ô∏è **–°—Ç–∞—Ç—É—Å:** –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ"
        else:
            status_text += "üö® **–°—Ç–∞—Ç—É—Å:** –î–ª–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º", callback_data=f"contact_admin:{callback.from_user.id}")],
            [InlineKeyboardButton(text="üè∞ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª–∞–Ω–∞", callback_data=f"clan_activities:{callback.from_user.id}")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"refresh_contextual:{callback.from_user.id}")]
        ])
        
        await callback.message.edit_text(status_text, reply_markup=keyboard, parse_mode="Markdown")


def _format_user_status(context: UserContext) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    status_text = f"üë§ **–í–∞—à —Å—Ç–∞—Ç—É—Å –≤ —á–∞—Ç–µ**\n\n"
    
    # –¢–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    context_names = {
        UserContextType.NEW_USER: "üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        UserContextType.UNBOUND_USER: "üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–∞—Å–ø–æ—Ä—Ç–æ–º",
        UserContextType.PENDING_VERIFICATION: "‚è≥ –û–∂–∏–¥–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
        UserContextType.VERIFIED_MEMBER: "‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫",
        UserContextType.CLAN_LEADER: "üëë –õ–∏–¥–µ—Ä –∫–ª–∞–Ω–∞",
        UserContextType.CLAN_COLEADER: "üî• –°–æ-–ª–∏–¥–µ—Ä –∫–ª–∞–Ω–∞",
        UserContextType.CLAN_ELDER: "‚≠ê –°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –∫–ª–∞–Ω–∞",
        UserContextType.EXTERNAL_PLAYER: "üåç –í–Ω–µ—à–Ω–∏–π –∏–≥—Ä–æ–∫",
        UserContextType.INACTIVE_USER: "üò¥ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        UserContextType.ADMIN_USER: "üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    }
    
    status_text += f"üìä **–†–æ–ª—å:** {context_names.get(context.context_type, '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è')}\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Å–ø–æ—Ä—Ç–µ
    if context.has_passport:
        status_text += f"üìã **–ü–∞—Å–ø–æ—Ä—Ç:** –°–æ–∑–¥–∞–Ω ‚úÖ\n"
        
        if context.has_player_binding:
            binding = context.player_binding
            verify_status = "‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if context.is_verified_player else "‚è≥ –û–∂–∏–¥–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
            status_text += f"üéÆ **–ü—Ä–∏–≤—è–∑–∫–∞:** {binding.player_name} ({verify_status})\n"
            status_text += f"üíé **–ö—É–±–∫–∏:** {context.player_trophies:,}\n"
        else:
            status_text += f"üéÆ **–ü—Ä–∏–≤—è–∑–∫–∞:** –ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω ‚ùå\n"
    else:
        status_text += f"üìã **–ü–∞—Å–ø–æ—Ä—Ç:** –ù–µ —Å–æ–∑–¥–∞–Ω ‚ùå\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞–Ω–µ
    if context.is_clan_member and context.clan_info:
        clan_name = context.clan_info['clan_name']
        role = context.clan_role or '—É—á–∞—Å—Ç–Ω–∏–∫'
        status_text += f"üè∞ **–ö–ª–∞–Ω:** {clan_name} ({role})\n"
    else:
        status_text += f"üè∞ **–ö–ª–∞–Ω:** –ù–µ —Å–æ—Å—Ç–æ–∏—Ç ‚ùå\n"
    
    # –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    activity_names = {
        ActivityLevel.VERY_LOW: "üò¥ –û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è",
        ActivityLevel.LOW: "üôÇ –ù–∏–∑–∫–∞—è", 
        ActivityLevel.MEDIUM: "üòä –°—Ä–µ–¥–Ω—è—è",
        ActivityLevel.HIGH: "üî• –í—ã—Å–æ–∫–∞—è",
        ActivityLevel.VERY_HIGH: "üåü –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è"
    }
    status_text += f"üìà **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** {activity_names.get(context.activity_level, '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è')}\n"
    
    # –£—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞
    experience_names = {
        ExperienceLevel.BEGINNER: "üå± –ù–æ–≤–∏—á–æ–∫",
        ExperienceLevel.NOVICE: "üìö –ò–∑—É—á–∞—é—â–∏–π",
        ExperienceLevel.INTERMEDIATE: "‚öôÔ∏è –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å", 
        ExperienceLevel.ADVANCED: "üèÜ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
        ExperienceLevel.EXPERT: "üéØ –≠–∫—Å–ø–µ—Ä—Ç"
    }
    status_text += f"üéÆ **–£—Ä–æ–≤–µ–Ω—å –≤ –∏–≥—Ä–µ:** {experience_names.get(context.experience_level, '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π')}\n"
    
    return status_text


def _create_quick_actions_keyboard(context: UserContext, user_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏"""
    builder = InlineKeyboardBuilder()
    
    # –î–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if context.context_type == UserContextType.NEW_USER:
        builder.row(InlineKeyboardButton(text="üìã –°–æ–∑–¥–∞—Ç—å –ø–∞—Å–ø–æ—Ä—Ç", callback_data=f"create_passport:{user_id}"))
    elif context.context_type == UserContextType.UNBOUND_USER:
        builder.row(InlineKeyboardButton(text="üéÆ –ü—Ä–∏–≤—è–∑–∞—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data=f"bind_player:{user_id}"))
    elif context.has_player_binding:
        builder.row(InlineKeyboardButton(text="üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data=f"my_progress:{user_id}"))
    
    if context.is_clan_member:
        builder.row(InlineKeyboardButton(text="üè∞ –ö–ª–∞–Ω", callback_data=f"clan_info:{user_id}"))
    
    builder.row(InlineKeyboardButton(text="üéØ –£–º–Ω–æ–µ –º–µ–Ω—é", callback_data=f"smart_menu:{user_id}"))
    
    return builder.as_markup()


def _generate_contextual_help(context: UserContext) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏"""
    
    help_text = "‚ùì **–ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å**\n\n"
    
    # –ü–æ–º–æ—â—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if context.context_type == UserContextType.NEW_USER:
        help_text += (
            "üéØ **–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã:**\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/create_passport` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞\n"
            "‚Ä¢ –ò–∑—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã –∫–æ–º–∞–Ω–¥–æ–π `/clan_list`\n"
            "‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –æ–±—â—É—é –ø–æ–º–æ—â—å –∫–æ–º–∞–Ω–¥–æ–π `/help`\n\n"
        )
    elif context.context_type == UserContextType.UNBOUND_USER:
        help_text += (
            "üéÆ **–ü—Ä–∏–≤—è–∑–∫–∞ –∏–≥—Ä–æ–∫–∞:**\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/bind_player` –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏–≥—Ä–æ–∫–∞ CoC\n" 
            "‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –ø–æ —Ç–µ–≥—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∫–ª–∞–Ω–∞\n"
            "‚Ä¢ –ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n\n"
        )
    elif context.context_type == UserContextType.PENDING_VERIFICATION:
        help_text += (
            "‚è≥ **–£—Å–∫–æ—Ä–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:**\n"
            "‚Ä¢ –ë—É–¥—å—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã –≤ —á–∞—Ç–µ –∫–ª–∞–Ω–∞\n"
            "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à –∏–≥—Ä–æ–∫ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∫–ª–∞–Ω–µ\n"
            "‚Ä¢ –ü—Ä–∏ –¥–æ–ª–≥–æ–º –æ–∂–∏–¥–∞–Ω–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n\n"
        )
    elif context.context_type in [UserContextType.VERIFIED_MEMBER, UserContextType.CLAN_ELDER, UserContextType.CLAN_COLEADER, UserContextType.CLAN_LEADER]:
        help_text += (
            "üèÜ **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞:**\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–æ–π `/clan_stats`\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–º–∞–Ω–¥–æ–π `/my_progress`\n"
            "‚Ä¢ –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö\n\n"
        )
    
    # –û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã
    help_text += (
        "üí° **–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        "‚Ä¢ `/smart` - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n"
        "‚Ä¢ `/my_status` - –≤–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "‚Ä¢ `/context_help` - –ø–æ–º–æ—â—å —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏\n"
    )
    
    return help_text


def _create_help_keyboard(context: UserContext, user_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–º–æ—â–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.row(InlineKeyboardButton(text="üìã –û–±—â–∞—è –ø–æ–º–æ—â—å", callback_data=f"general_help:{user_id}"))
    builder.row(InlineKeyboardButton(text="üéØ –£–º–Ω–æ–µ –º–µ–Ω—é", callback_data=f"smart_menu:{user_id}"))
    
    if context.is_chat_admin:
        builder.row(InlineKeyboardButton(text="üîß –ü–æ–º–æ—â—å –∞–¥–º–∏–Ω—É", callback_data=f"admin_help:{user_id}"))
    
    return builder.as_markup()