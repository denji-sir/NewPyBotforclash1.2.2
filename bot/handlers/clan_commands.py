"""
–•–∞–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–Ω–∞–º–∏
"""
import logging
import aiosqlite
from datetime import datetime
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command, CommandObject
from aiogram.exceptions import TelegramBadRequest

from ..models.clan_models import (
    ClanOperationLog, ClanNotFound, ClanAlreadyRegistered, 
    ApiError, DatabaseError, PermissionDenied
)
from ..services.coc_api_service import get_coc_api_service
from ..services.clan_database_service import get_clan_db_service
from ..services.permission_service import get_permission_service
from ..utils.validators import validate_clan_tag, format_number, format_date
from ..utils.clan_helpers import format_member_list, get_clan_recruitment_message
from ..utils.clan_analysis_manager import get_clan_analysis_manager

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥ –∫–ª–∞–Ω–æ–≤
clan_router = Router()


def format_date(dt: datetime) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    return dt.strftime("%d.%m.%Y")


def format_number(num: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏"""
    return f"{num:,}".replace(",", " ")


@clan_router.message(Command("register_clan"))
async def register_clan_command(message: Message, command: CommandObject):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∞–Ω–∞ –≤ —á–∞—Ç–µ
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /register_clan #CLANTAG [–æ–ø–∏—Å–∞–Ω–∏–µ]
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
        coc_api = get_coc_api_service()
        db_service = get_clan_db_service()
        permission_service = get_permission_service()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        await permission_service.require_clan_registration_permission(
            message.from_user.id, message.chat.id
        )
        
        # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        if not command.args:
            await message.reply(
                "‚ùå **–£–∫–∞–∂–∏—Ç–µ —Ç–µ–≥ –∫–ª–∞–Ω–∞!**\n\n"
                "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/register_clan #CLANTAG [–æ–ø–∏—Å–∞–Ω–∏–µ]`\n\n"
                "**–ü—Ä–∏–º–µ—Ä:** `/register_clan #2PP0JCCL –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞`",
                parse_mode="Markdown"
            )
            return
        
        args = command.args.split()
        clan_tag = args[0]
        description = " ".join(args[1:]) if len(args) > 1 else None
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–µ–≥ –∫–ª–∞–Ω–∞
        if not clan_tag.startswith('#') or len(clan_tag) < 4:
            await message.reply(
                "‚ùå **–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–≥ –∫–ª–∞–Ω–∞!**\n\n"
                "–¢–µ–≥ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å # –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞\n"
                "**–ü—Ä–∏–º–µ—Ä:** `#2PP0JCCL`"
            )
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        status_msg = await message.reply(
            f"üîç **–ü—Ä–æ–≤–µ—Ä—è—é –∫–ª–∞–Ω {clan_tag}...**\n"
            "‚è≥ –û–±—Ä–∞—â–∞—é—Å—å –∫ Clash of Clans API..."
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞ –∏–∑ CoC API
        try:
            async with coc_api:
                clan_data = await coc_api.get_clan(clan_tag)
        except ClanNotFound:
            await status_msg.edit_text(
                f"‚ùå **–ö–ª–∞–Ω {clan_tag} –Ω–µ –Ω–∞–π–¥–µ–Ω!**\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–µ–≥–∞ –∫–ª–∞–Ω–∞ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–ª–∞–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ Clash of Clans."
            )
            return
        except ApiError as e:
            await status_msg.edit_text(
                f"‚ùå **–û—à–∏–±–∫–∞ Clash of Clans API**\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–µ: {e}\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        await status_msg.edit_text(
            f"‚úÖ **–ö–ª–∞–Ω –Ω–∞–π–¥–µ–Ω!**\n"
            f"üè∞ {clan_data.name}\n"
            f"‚è≥ –°–æ—Ö—Ä–∞–Ω—è—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–ª–∞–Ω –≤ –ë–î
        try:
            clan_id = await db_service.register_clan(
                clan_data=clan_data,
                chat_id=message.chat.id,
                registered_by=message.from_user.id,
                description=description
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
            log_entry = ClanOperationLog.create_log(
                operation_type='register',
                clan_id=clan_id,
                clan_tag=clan_tag,
                chat_id=message.chat.id,
                user_id=message.from_user.id,
                username=message.from_user.username,
                operation_details={'description': description},
                result='success'
            )
            await db_service.log_operation(log_entry)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ–± —É—Å–ø–µ—Ö–µ
            success_text = (
                f"‚úÖ **–ö–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!**\n\n"
                f"üè∞ **{clan_data.name}** `{clan_data.tag}`\n"
                f"üìä **–£—Ä–æ–≤–µ–Ω—å:** {clan_data.level}\n"
                f"üë• **–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {clan_data.member_count}/50\n"
                f"üèÜ **–û—á–∫–∏:** {format_number(clan_data.points)}\n"
                f"üåç **–õ–æ–∫–∞—Ü–∏—è:** {clan_data.location}\n"
            )
            
            if clan_data.war_wins > 0:
                success_text += f"‚öîÔ∏è **–ü–æ–±–µ–¥ –≤ –≤–æ–π–Ω–∞—Ö:** {clan_data.war_wins}\n"
            
            if description:
                success_text += f"\nüìù **–û–ø–∏—Å–∞–Ω–∏–µ:** {description}\n"
            
            success_text += (
                f"\nüí° **–ß—Ç–æ –¥–∞–ª—å—à–µ:**\n"
                f"‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–∞—Å–ø–æ—Ä—Ç–∞: `/create_passport`\n"
                f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤: `/clan_list`\n"
                f"‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞–Ω–µ: `/clan_info {clan_data.tag}`"
            )
            
            await status_msg.edit_text(success_text, parse_mode="Markdown")
            
        except ClanAlreadyRegistered as e:
            await status_msg.edit_text(f"‚ùå **{e}**")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            log_entry = ClanOperationLog.create_log(
                operation_type='register',
                clan_tag=clan_tag,
                chat_id=message.chat.id,
                user_id=message.from_user.id,
                username=message.from_user.username,
                result='error',
                error_message=str(e)
            )
            await db_service.log_operation(log_entry)
            
        except DatabaseError as e:
            await status_msg.edit_text(
                f"‚ùå **–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö**\n\n"
                f"{e}\n\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞."
            )
            
    except PermissionDenied:
        await message.reply(
            "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!**\n\n"
            "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞ –º–æ–≥—É—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω—ã."
        )
    except Exception as e:
        logger.error(f"Unexpected error in register_clan_command: {e}")
        await message.reply(
            "‚ùå **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞."
        )


@clan_router.message(Command("clan_list"))
async def clan_list_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞–Ω–æ–≤ –≤ —á–∞—Ç–µ"""
    try:
        db_service = get_clan_db_service()
        
        clans = await db_service.get_chat_clans(message.chat.id, active_only=True)
        
        if not clans:
            await message.reply(
                "üìù **–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞–Ω–æ–≤**\n\n"
                "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π:\n"
                "`/register_clan #CLANTAG`\n\n"
                "üí° **–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:**\n"
                "‚Ä¢ `/register_clan #2PP0JCCL`\n"
                "‚Ä¢ `/register_clan #ABC123 –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞`",
                parse_mode="Markdown"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞–Ω–∞
        settings = await db_service.get_chat_settings(message.chat.id)
        default_clan_id = settings.default_clan_id
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
        text = "üè∞ **–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω—ã:**\n\n"
        
        for i, clan in enumerate(clans, 1):
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∞–Ω–∞
            status_emoji = "‚úÖ"
            default_mark = ""
            
            if clan.id == default_clan_id:
                default_mark = " ‚≠ê"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–µ
            text += (
                f"**{i}.** {status_emoji} **{clan.clan_name}**{default_mark}\n"
                f"    üè∑Ô∏è `{clan.clan_tag}`\n"
                f"    üìä –£—Ä–æ–≤–µ–Ω—å {clan.clan_level} | "
                f"üë• {clan.member_count} —á–µ–ª. | "
                f"üèÜ {format_number(clan.clan_points)}\n"
                f"    üìÖ –î–æ–±–∞–≤–ª–µ–Ω {format_date(clan.registered_at)}\n\n"
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        text += (
            f"üìä **–í—Å–µ–≥–æ –∫–ª–∞–Ω–æ–≤:** {len(clans)}/{settings.max_clans_per_chat}\n\n"
            f"üí° **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
            f"‚Ä¢ `/clan_info <–Ω–æ–º–µ—Ä>` - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
            f"‚Ä¢ `/set_default_clan <–Ω–æ–º–µ—Ä>` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π\n"
            f"‚Ä¢ `/update_clan <–Ω–æ–º–µ—Ä>` - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ CoC API"
        )
        
        await message.reply(text, parse_mode="Markdown")
        
    except Exception as e:
        logger.error(f"Error in clan_list_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∞–Ω–æ–≤**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("clan_info"))
async def clan_info_command(message: Message, command: CommandObject):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–µ
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /clan_info [–Ω–æ–º–µ—Ä|—Ç–µ–≥]
    """
    try:
        db_service = get_clan_db_service()
        
        clan = None
        
        if command.args:
            arg = command.args.strip()
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–≥—É
            if arg.startswith('#'):
                clan = await db_service.get_clan_by_tag(arg, message.chat.id)
            else:
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞
                try:
                    clan_number = int(arg)
                    clans = await db_service.get_chat_clans(message.chat.id)
                    
                    if 1 <= clan_number <= len(clans):
                        clan = clans[clan_number - 1]
                    else:
                        await message.reply(
                            f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}\n"
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤."
                        )
                        return
                except ValueError:
                    await message.reply(
                        "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!**\n\n"
                        "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/clan_info [–Ω–æ–º–µ—Ä|—Ç–µ–≥]`\n\n"
                        "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
                        "‚Ä¢ `/clan_info 1` - –ø–µ—Ä–≤—ã–π –∫–ª–∞–Ω –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                        "‚Ä¢ `/clan_info #2PP0JCCL` - –ø–æ —Ç–µ–≥—É –∫–ª–∞–Ω–∞"
                    )
                    return
        else:
            # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω —á–∞—Ç–∞
            settings = await db_service.get_chat_settings(message.chat.id)
            if settings.default_clan_id:
                clan = await db_service.get_clan_by_id(settings.default_clan_id)
            else:
                await message.reply(
                    "‚ùå **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                    "‚Ä¢ `/clan_info <–Ω–æ–º–µ—Ä>` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–ª–∞–Ω–µ\n"
                    "‚Ä¢ `/clan_list` - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤\n"
                    "‚Ä¢ `/set_default_clan <–Ω–æ–º–µ—Ä>` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω"
                )
                return
        
        if not clan:
            await message.reply(
                "‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!**\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–µ–≥–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä–∞ –∫–ª–∞–Ω–∞.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤."
            )
            return
        
        # –ü–∞—Ä—Å–∏–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        metadata = clan.clan_metadata
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        text = (
            f"üè∞ **{clan.clan_name}**\n"
            f"üè∑Ô∏è **–¢–µ–≥:** `{clan.clan_tag}`\n\n"
            
            f"üìä **–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
            f"‚Ä¢ **–£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞:** {clan.clan_level}\n"
            f"‚Ä¢ **–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {clan.member_count}/50\n"
            f"‚Ä¢ **–û—á–∫–∏ –∫–ª–∞–Ω–∞:** {format_number(clan.clan_points)}\n"
        )
        
        if metadata.get('location'):
            text += f"‚Ä¢ **–õ–æ–∫–∞—Ü–∏—è:** {metadata['location']}\n"
        
        if metadata.get('war_wins', 0) > 0:
            text += f"‚Ä¢ **–ü–æ–±–µ–¥ –≤ –≤–æ–π–Ω–∞—Ö:** {metadata['war_wins']}\n"
            
        if metadata.get('war_win_streak', 0) > 0:
            text += f"‚Ä¢ **–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è:** {metadata['war_win_streak']} –ø–æ–±–µ–¥\n"
        
        text += f"\nüìÖ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:**\n"
        text += f"‚Ä¢ **–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:** {format_date(clan.registered_at)}\n"
        text += f"‚Ä¢ **–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** {format_date(clan.last_updated)}\n"
        
        if clan.clan_description:
            text += f"\nüìù **–û–ø–∏—Å–∞–Ω–∏–µ:**\n{clan.clan_description}\n"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ—Ç –∫–ª–∞–Ω –æ—Å–Ω–æ–≤–Ω—ã–º
        settings = await db_service.get_chat_settings(message.chat.id)
        if settings.default_clan_id == clan.id:
            text += f"\n‚≠ê **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω —á–∞—Ç–∞**\n"
        
        text += (
            f"\nüí° **–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞:**\n"
            f"‚Ä¢ `/update_clan {clan.clan_tag}` - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ\n"
            f"‚Ä¢ `/clan_members {clan.clan_tag}` - —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
        )
        
        await message.reply(text, parse_mode="Markdown")
        
    except Exception as e:
        logger.error(f"Error in clan_info_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞–Ω–µ**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("set_default_clan"))
async def set_default_clan_command(message: Message, command: CommandObject):
    """
    –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω —á–∞—Ç–∞
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /set_default_clan <–Ω–æ–º–µ—Ä>
    """
    try:
        db_service = get_clan_db_service()
        permission_service = get_permission_service()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await permission_service.require_admin(
            message.from_user.id, message.chat.id, "setting default clan"
        )
        
        if not command.args:
            await message.reply(
                "‚ùå **–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/set_default_clan <–Ω–æ–º–µ—Ä>`\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤."
            )
            return
        
        try:
            clan_number = int(command.args.strip())
        except ValueError:
            await message.reply(
                "‚ùå **–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                "–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü—Ä–∏–º–µ—Ä: `/set_default_clan 2`"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∞–Ω–æ–≤
        clans = await db_service.get_chat_clans(message.chat.id)
        
        if not clans:
            await message.reply(
                "‚ùå **–í —á–∞—Ç–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞–Ω–æ–≤!**\n\n"
                "–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∫–ª–∞–Ω: `/register_clan #CLANTAG`"
            )
            return
        
        if not (1 <= clan_number <= len(clans)):
            await message.reply(
                f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞."
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–ª–∞–Ω
        selected_clan = clans[clan_number - 1]
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
        success = await db_service.set_default_clan(message.chat.id, selected_clan.id)
        
        if success:
            await message.reply(
                f"‚úÖ **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n\n"
                f"üè∞ **{selected_clan.clan_name}** `{selected_clan.clan_tag}`\n\n"
                "–¢–µ–ø–µ—Ä—å –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∫–ª–∞–Ω–∞ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —ç—Ç–∏–º –∫–ª–∞–Ω–æ–º."
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
            log_entry = ClanOperationLog.create_log(
                operation_type='set_default',
                clan_id=selected_clan.id,
                clan_tag=selected_clan.clan_tag,
                chat_id=message.chat.id,
                user_id=message.from_user.id,
                username=message.from_user.username,
                result='success'
            )
            await db_service.log_operation(log_entry)
        else:
            await message.reply(
                "‚ùå **–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞–Ω–∞**\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
        
    except PermissionDenied:
        await message.reply(
            "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!**\n\n"
            "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞ –º–æ–≥—É—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω."
        )
    except Exception as e:
        logger.error(f"Error in set_default_clan_command: {e}")
        await message.reply(
            "‚ùå **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("clan_members"))
async def clan_members_command(message: Message, command: CommandObject):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /clan_members [–Ω–æ–º–µ—Ä|—Ç–µ–≥]
    """
    try:
        db_service = get_clan_db_service()
        coc_api = get_coc_api_service()
        
        clan = None
        
        if command.args:
            arg = command.args.strip()
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–≥—É
            if arg.startswith('#'):
                clan = await db_service.get_clan_by_tag(arg, message.chat.id)
            else:
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞
                try:
                    clan_number = int(arg)
                    clans = await db_service.get_chat_clans(message.chat.id)
                    
                    if 1 <= clan_number <= len(clans):
                        clan = clans[clan_number - 1]
                    else:
                        await message.reply(
                            f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}\n"
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤."
                        )
                        return
                except ValueError:
                    await message.reply(
                        "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!**\n\n"
                        "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/clan_members [–Ω–æ–º–µ—Ä|—Ç–µ–≥]`\n\n"
                        "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
                        "‚Ä¢ `/clan_members 1` - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞–Ω–∞\n"
                        "‚Ä¢ `/clan_members #2PP0JCCL` - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ —Ç–µ–≥—É"
                    )
                    return
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞–Ω–∞
            settings = await db_service.get_chat_settings(message.chat.id)
            if settings.default_clan_id:
                clan = await db_service.get_clan_by_id(settings.default_clan_id)
            else:
                await message.reply(
                    "‚ùå **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                    "‚Ä¢ `/clan_members <–Ω–æ–º–µ—Ä>` - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞–Ω–∞\n"
                    "‚Ä¢ `/set_default_clan <–Ω–æ–º–µ—Ä>` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω"
                )
                return
        
        if not clan:
            await message.reply(
                "‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!**\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–µ–≥–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä–∞ –∫–ª–∞–Ω–∞.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤."
            )
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        status_msg = await message.reply(
            f"üîç **–ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞ {clan.clan_name}...**\n"
            "‚è≥ –û–±—Ä–∞—â–∞—é—Å—å –∫ Clash of Clans API..."
        )
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ CoC API
            async with coc_api:
                members = await coc_api.get_clan_members(clan.clan_tag)
            
            if not members:
                await status_msg.edit_text(
                    f"üìù **–ö–ª–∞–Ω {clan.clan_name} –ø—É—Å—Ç**\n\n"
                    "–í –∫–ª–∞–Ω–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."
                )
                return
            
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–æ–ª–∏ –∏ –¥–æ–Ω–∞—Ç—É
            role_order = {'leader': 0, 'coLeader': 1, 'admin': 2, 'member': 3}
            members.sort(key=lambda x: (role_order.get(x.get('role', 'member'), 4), -x.get('donations', 0)))
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            text = f"üë• **–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞ {clan.clan_name}**\n\n"
            
            role_emojis = {
                'leader': 'üëë',
                'coLeader': 'üåü', 
                'admin': '‚≠ê',
                'member': 'üë§'
            }
            
            current_role = None
            for member in members:
                member_role = member.get('role', 'member')
                member_name = member.get('name', 'Unknown')
                member_tag = member.get('tag', '')
                member_level = member.get('expLevel', 0)
                member_donations = member.get('donations', 0)
                member_received = member.get('donationsReceived', 0)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–æ–ª–∏
                if current_role != member_role:
                    current_role = member_role
                    role_name = {
                        'leader': '–õ–∏–¥–µ—Ä',
                        'coLeader': '–°–æ-–ª–∏–¥–µ—Ä',
                        'admin': '–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞',
                        'member': '–£—á–∞—Å—Ç–Ω–∏–∫'
                    }.get(member_role, '–£—á–∞—Å—Ç–Ω–∏–∫')
                    
                    text += f"\n**{role_emojis.get(member_role, 'üë§')} {role_name}:**\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
                text += (
                    f"‚Ä¢ **{member_name}** `{member_tag}`\n"
                    f"  üéØ –£—Ä–æ–≤–µ–Ω—å {member_level} | "
                    f"üíù {format_number(member_donations)} | "
                    f"üì• {format_number(member_received)}\n"
                )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤ Telegram
                if len(text) > 3500:
                    text += f"\n... –∏ –µ—â–µ {len(members) - members.index(member) - 1} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
                    break
            
            text += f"\nüìä **–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {len(members)}/50"
            
            await status_msg.edit_text(text, parse_mode="Markdown")
            
        except ApiError as e:
            await status_msg.edit_text(
                f"‚ùå **–û—à–∏–±–∫–∞ CoC API**\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}"
            )
            
    except Exception as e:
        logger.error(f"Error in clan_members_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("update_clan"))
async def update_clan_command(message: Message, command: CommandObject):
    """
    –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞ –∏–∑ CoC API
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /update_clan [–Ω–æ–º–µ—Ä|—Ç–µ–≥]
    """
    try:
        db_service = get_clan_db_service()
        coc_api = get_coc_api_service()
        permission_service = get_permission_service()
        
        clan = None
        
        if command.args:
            arg = command.args.strip()
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–≥—É
            if arg.startswith('#'):
                clan = await db_service.get_clan_by_tag(arg, message.chat.id)
            else:
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞
                try:
                    clan_number = int(arg)
                    clans = await db_service.get_chat_clans(message.chat.id)
                    
                    if 1 <= clan_number <= len(clans):
                        clan = clans[clan_number - 1]
                    else:
                        await message.reply(
                            f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}\n"
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤."
                        )
                        return
                except ValueError:
                    await message.reply(
                        "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!**\n\n"
                        "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/update_clan [–Ω–æ–º–µ—Ä|—Ç–µ–≥]`\n\n"
                        "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
                        "‚Ä¢ `/update_clan 1` - –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –∫–ª–∞–Ω\n"
                        "‚Ä¢ `/update_clan #2PP0JCCL` - –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ —Ç–µ–≥—É"
                    )
                    return
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω
            settings = await db_service.get_chat_settings(message.chat.id)
            if settings.default_clan_id:
                clan = await db_service.get_clan_by_id(settings.default_clan_id)
            else:
                await message.reply(
                    "‚ùå **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                    "‚Ä¢ `/update_clan <–Ω–æ–º–µ—Ä>` - –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª–∞–Ω\n"
                    "‚Ä¢ `/set_default_clan <–Ω–æ–º–µ—Ä>` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω"
                )
                return
        
        if not clan:
            await message.reply(
                "‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!**\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–µ–≥–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä–∞ –∫–ª–∞–Ω–∞."
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º
        if not await permission_service.can_manage_clan(message.from_user.id, clan.id):
            await message.reply(
                "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!**\n\n"
                "–û–±–Ω–æ–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞ "
                "–∏–ª–∏ —Ç–æ—Ç –∫—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –∫–ª–∞–Ω."
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        status_msg = await message.reply(
            f"üîÑ **–û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞ {clan.clan_name}...**\n"
            "‚è≥ –ü–æ–ª—É—á–∞—é –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ CoC API..."
        )
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ CoC API
            async with coc_api:
                fresh_clan_data = await coc_api.get_clan(clan.clan_tag)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            old_level = clan.clan_level
            old_points = clan.clan_points
            old_members = clan.member_count
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
            success = await db_service.update_clan_data(clan.id, fresh_clan_data)
            
            if success:
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
                changes = []
                
                if fresh_clan_data.level != old_level:
                    changes.append(f"üÜô –£—Ä–æ–≤–µ–Ω—å: {old_level} ‚Üí {fresh_clan_data.level}")
                
                if fresh_clan_data.points != old_points:
                    diff = fresh_clan_data.points - old_points
                    sign = "+" if diff > 0 else ""
                    changes.append(f"üèÜ –û—á–∫–∏: {format_number(old_points)} ‚Üí {format_number(fresh_clan_data.points)} ({sign}{format_number(diff)})")
                
                if fresh_clan_data.member_count != old_members:
                    diff = fresh_clan_data.member_count - old_members
                    sign = "+" if diff > 0 else ""
                    changes.append(f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {old_members} ‚Üí {fresh_clan_data.member_count} ({sign}{diff})")
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                text = f"‚úÖ **–î–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!**\n\n"
                text += f"üè∞ **{fresh_clan_data.name}** `{fresh_clan_data.tag}`\n\n"
                
                if changes:
                    text += "üìà **–ò–∑–º–µ–Ω–µ–Ω–∏—è:**\n"
                    for change in changes:
                        text += f"‚Ä¢ {change}\n"
                else:
                    text += "üìä **–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç** - –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã\n"
                
                text += f"\n‚è∞ **–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** —Ç–æ–ª—å–∫–æ —á—Ç–æ"
                
                await status_msg.edit_text(text, parse_mode="Markdown")
                
                # –õ–æ–≥–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
                log_entry = ClanOperationLog.create_log(
                    operation_type='update',
                    clan_id=clan.id,
                    clan_tag=clan.clan_tag,
                    chat_id=message.chat.id,
                    user_id=message.from_user.id,
                    username=message.from_user.username,
                    operation_details={'changes': changes},
                    result='success'
                )
                await db_service.log_operation(log_entry)
                
            else:
                await status_msg.edit_text(
                    "‚ùå **–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö**\n\n"
                    "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
                )
                
        except ClanNotFound:
            await status_msg.edit_text(
                f"‚ùå **–ö–ª–∞–Ω {clan.clan_tag} –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!**\n\n"
                "–ö–ª–∞–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ Clash of Clans –∏–ª–∏ –∏–∑–º–µ–Ω–∏–ª —Ç–µ–≥.\n"
                "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞ –≤ –±–æ—Ç–µ."
            )
        except ApiError as e:
            await status_msg.edit_text(
                f"‚ùå **–û—à–∏–±–∫–∞ CoC API**\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞: {e}"
            )
            
    except Exception as e:
        logger.error(f"Error in update_clan_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–Ω–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("deactivate_clan"))
async def deactivate_clan_command(message: Message, command: CommandObject):
    """
    –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω (—Å–∫—Ä—ã—Ç—å –∏–∑ —Å–ø–∏—Å–∫–æ–≤, –Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ)
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /deactivate_clan <–Ω–æ–º–µ—Ä|—Ç–µ–≥>
    """
    try:
        db_service = get_clan_db_service()
        permission_service = get_permission_service()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await permission_service.require_admin(
            message.from_user.id, message.chat.id, "deactivating clan"
        )
        
        if not command.args:
            await message.reply(
                "‚ùå **–£–∫–∞–∂–∏—Ç–µ –∫–ª–∞–Ω –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏!**\n\n"
                "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/deactivate_clan <–Ω–æ–º–µ—Ä|—Ç–µ–≥>`\n\n"
                "‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∫—Ä–æ–µ—Ç –∫–ª–∞–Ω –∏–∑ —Å–ø–∏—Å–∫–æ–≤, "
                "–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—é."
            )
            return
        
        arg = command.args.strip()
        clan = None
        
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–≥—É
        if arg.startswith('#'):
            clan = await db_service.get_clan_by_tag(arg, message.chat.id)
        else:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É
            try:
                clan_number = int(arg)
                clans = await db_service.get_chat_clans(message.chat.id)
                
                if 1 <= clan_number <= len(clans):
                    clan = clans[clan_number - 1]
                else:
                    await message.reply(
                        f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                        f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}"
                    )
                    return
            except ValueError:
                await message.reply(
                    "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞ –∏–ª–∏ —Ç–µ–≥: `/deactivate_clan 2` –∏–ª–∏ `/deactivate_clan #ABC123`"
                )
                return
        
        if not clan:
            await message.reply(
                "‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!**\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ —Ç–µ–≥–∞ –∫–ª–∞–Ω–∞."
            )
            return
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        await message.reply(
            f"‚ö†Ô∏è **–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é –∫–ª–∞–Ω–∞**\n\n"
            f"üè∞ **{clan.clan_name}** `{clan.clan_tag}`\n\n"
            f"**–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç:**\n"
            f"‚Ä¢ –ö–ª–∞–Ω –∏—Å—á–µ–∑–Ω–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–æ–≤\n"
            f"‚Ä¢ –ù–µ–ª—å–∑—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ —Å —ç—Ç–∏–º –∫–ª–∞–Ω–æ–º\n"
            f"‚Ä¢ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è\n"
            f"‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ –±–∞–∑–µ\n\n"
            f"**–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ:** `/confirm_deactivate {clan.id}`",
            parse_mode="Markdown"
        )
        
    except PermissionDenied:
        await message.reply(
            "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!**\n\n"
            "–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞."
        )
    except Exception as e:
        logger.error(f"Error in deactivate_clan_command: {e}")
        await message.reply(
            "‚ùå **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("confirm_deactivate"))
async def confirm_deactivate_clan_command(message: Message, command: CommandObject):
    """
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /confirm_deactivate <id_–∫–ª–∞–Ω–∞>
    """
    try:
        db_service = get_clan_db_service()
        permission_service = get_permission_service()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await permission_service.require_admin(
            message.from_user.id, message.chat.id, "confirming clan deactivation"
        )
        
        if not command.args:
            await message.reply("‚ùå **–ù–µ —É–∫–∞–∑–∞–Ω ID –∫–ª–∞–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è**")
            return
        
        try:
            clan_id = int(command.args.strip())
        except ValueError:
            await message.reply("‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π ID –∫–ª–∞–Ω–∞**")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–Ω
        clan = await db_service.get_clan_by_id(clan_id)
        
        if not clan or clan.chat_id != message.chat.id:
            await message.reply("‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–º—É —á–∞—Ç—É**")
            return
        
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–ª–∞–Ω –≤ –ë–î
        async with aiosqlite.connect(db_service.db_path) as db:
            await db.execute(
                "UPDATE registered_clans SET is_active = 0 WHERE id = ?",
                (clan_id,)
            )
            await db.commit()
        
        # –õ–æ–≥–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
        log_entry = ClanOperationLog.create_log(
            operation_type='deactivate',
            clan_id=clan_id,
            clan_tag=clan.clan_tag,
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username,
            result='success'
        )
        await db_service.log_operation(log_entry)
        
        await message.reply(
            f"‚úÖ **–ö–ª–∞–Ω –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω**\n\n"
            f"üè∞ {clan.clan_name} `{clan.clan_tag}` –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–∞—Ö.\n\n"
            f"üí° **–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–Ω–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞.**",
            parse_mode="Markdown"
        )
        
    except PermissionDenied:
        await message.reply(
            "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!**\n\n"
            "–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞."
        )
    except Exception as e:
        logger.error(f"Error in confirm_deactivate_clan_command: {e}")
        await message.reply("‚ùå **–û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞**")


@clan_router.message(Command("clan_stats"))  
async def clan_stats_command(message: Message, command: CommandObject):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω–∞
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /clan_stats [–Ω–æ–º–µ—Ä|—Ç–µ–≥]
    """
    try:
        db_service = get_clan_db_service()
        coc_api = get_coc_api_service()
        
        clan = None
        
        if command.args:
            arg = command.args.strip()
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–≥—É
            if arg.startswith('#'):
                clan = await db_service.get_clan_by_tag(arg, message.chat.id)
            else:
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞
                try:
                    clan_number = int(arg)
                    clans = await db_service.get_chat_clans(message.chat.id)
                    
                    if 1 <= clan_number <= len(clans):
                        clan = clans[clan_number - 1]
                    else:
                        await message.reply(
                            f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}"
                        )
                        return
                except ValueError:
                    await message.reply(
                        "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!**\n\n"
                        "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/clan_stats [–Ω–æ–º–µ—Ä|—Ç–µ–≥]`"
                    )
                    return
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞–Ω–∞
            settings = await db_service.get_chat_settings(message.chat.id)
            if settings.default_clan_id:
                clan = await db_service.get_clan_by_id(settings.default_clan_id)
            else:
                await message.reply(
                    "‚ùå **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_stats <–Ω–æ–º–µ—Ä>` –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞–Ω–∞."
                )
                return
        
        if not clan:
            await message.reply("‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!**")
            return
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        status_msg = await message.reply(
            f"üìä **–°–æ–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω–∞ {clan.clan_name}...**\n"
            "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥..."
        )
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            async with coc_api:
                clan_data = await coc_api.get_clan(clan.clan_tag)
                members = await coc_api.get_clan_members(clan.clan_tag)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            total_donations = sum(member.get('donations', 0) for member in members)
            total_received = sum(member.get('donationsReceived', 0) for member in members)
            avg_level = sum(member.get('expLevel', 0) for member in members) / len(members) if members else 0
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–æ–ª–∏
            roles = {}
            for member in members:
                role = member.get('role', 'member')
                roles[role] = roles.get(role, 0) + 1
            
            # –¢–æ–ø –¥–æ–Ω–∞—Ç–æ—Ä—ã (—Ç–æ–ø 5)
            top_donors = sorted(members, key=lambda x: x.get('donations', 0), reverse=True)[:5]
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            metadata = clan.clan_metadata
            
            text = (
                f"üìä **–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞–Ω–∞**\n\n"
                f"üè∞ **{clan_data.name}** `{clan_data.tag}`\n"
                f"üìù {clan_data.description}\n\n"
                
                f"**üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:**\n"
                f"‚Ä¢ üèÜ –û—á–∫–∏ –∫–ª–∞–Ω–∞: {format_number(clan_data.points)}\n"
                f"‚Ä¢ üìä –£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞: {clan_data.level}\n"
                f"‚Ä¢ üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}/50\n"
                f"‚Ä¢ üåç –õ–æ–∫–∞—Ü–∏—è: {metadata.get('location', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
                
                f"**‚öîÔ∏è –í–æ–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
                f"‚Ä¢ üèÖ –ü–æ–±–µ–¥ –≤ –≤–æ–π–Ω–∞—Ö: {metadata.get('war_wins', 0)}\n"
                f"‚Ä¢ üî• –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: {metadata.get('war_win_streak', 0)}\n\n"
                
                f"**üíù –î–æ–Ω–∞—Ç—ã:**\n"
                f"‚Ä¢ üì§ –í—Å–µ–≥–æ –æ—Ç–¥–∞–Ω–æ: {format_number(total_donations)}\n"
                f"‚Ä¢ üì• –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: {format_number(total_received)}\n"
                f"‚Ä¢ üìä –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å: {avg_level:.1f}\n\n"
                
                f"**üëë –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π:**\n"
            )
            
            role_emojis = {
                'leader': 'üëë –õ–∏–¥–µ—Ä',
                'coLeader': 'üåü –°–æ-–ª–∏–¥–µ—Ä', 
                'admin': '‚≠ê –°—Ç–∞—Ä–µ–π—à–∏–Ω–∞',
                'member': 'üë§ –£—á–∞—Å—Ç–Ω–∏–∫'
            }
            
            for role, emoji_name in role_emojis.items():
                count = roles.get(role, 0)
                if count > 0:
                    text += f"‚Ä¢ {emoji_name}: {count}\n"
            
            if top_donors:
                text += f"\n**üèÜ –¢–æ–ø –¥–æ–Ω–∞—Ç–æ—Ä—ã:**\n"
                for i, donor in enumerate(top_donors, 1):
                    donations = donor.get('donations', 0)
                    name = donor.get('name', 'Unknown')
                    text += f"{i}. **{name}** - {format_number(donations)} üíù\n"
            
            text += f"\nüìÖ **–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** {format_date(clan.last_updated)}"
            
            await status_msg.edit_text(text, parse_mode="Markdown")
            
        except ApiError as e:
            await status_msg.edit_text(
                f"‚ùå **–û—à–∏–±–∫–∞ CoC API**\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {e}"
            )
            
    except Exception as e:
        logger.error(f"Error in clan_stats_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–ª–∞–Ω–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("update_all_clans"))
async def update_all_clans_command(message: Message):
    """
    –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤ –≤ —á–∞—Ç–µ
    """
    try:
        db_service = get_clan_db_service()
        coc_api = get_coc_api_service()
        permission_service = get_permission_service()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await permission_service.require_admin(
            message.from_user.id, message.chat.id, "updating all clans"
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª–∞–Ω—ã —á–∞—Ç–∞
        clans = await db_service.get_chat_clans(message.chat.id)
        
        if not clans:
            await message.reply(
                "‚ùå **–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞–Ω–æ–≤**\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/register_clan <—Ç–µ–≥>` –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞–Ω–∞."
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        status_msg = await message.reply(
            f"üîÑ **–û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤...**\n\n"
            f"üìä –ö–ª–∞–Ω–æ–≤ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é: {len(clans)}\n"
            "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã..."
        )
        
        updated_count = 0
        failed_count = 0
        failed_clans = []
        
        async with coc_api:
            for i, clan in enumerate(clans, 1):
                try:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    await status_msg.edit_text(
                        f"üîÑ **–û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–æ–≤...**\n\n"
                        f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {i}/{len(clans)}\n"
                        f"üè∞ –û–±–Ω–æ–≤–ª—è—é: {clan.clan_name}\n"
                        f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}\n"
                        f"‚ùå –û—à–∏–±–æ–∫: {failed_count}",
                        parse_mode="Markdown"
                    )
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
                    fresh_data = await coc_api.get_clan(clan.clan_tag)
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
                    success = await db_service.update_clan_data(clan.id, fresh_data)
                    
                    if success:
                        updated_count += 1
                    else:
                        failed_count += 1
                        failed_clans.append(clan.clan_name)
                        
                except Exception as e:
                    failed_count += 1
                    failed_clans.append(f"{clan.clan_name}: {str(e)}")
                    logger.error(f"Failed to update clan {clan.clan_tag}: {e}")
        
        # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result_text = f"‚úÖ **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!**\n\n"
        result_text += f"üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:**\n"
        result_text += f"‚Ä¢ ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}\n"
        result_text += f"‚Ä¢ ‚ùå –û—à–∏–±–æ–∫: {failed_count}\n"
        result_text += f"‚Ä¢ üìà –í—Å–µ–≥–æ –∫–ª–∞–Ω–æ–≤: {len(clans)}\n\n"
        
        if failed_clans:
            result_text += "**‚ùå –û—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:**\n"
            for failed in failed_clans[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 5 –æ—à–∏–±–æ–∫
                result_text += f"‚Ä¢ {failed}\n"
            
            if len(failed_clans) > 5:
                result_text += f"... –∏ –µ—â–µ {len(failed_clans) - 5} –æ—à–∏–±–æ–∫\n"
        
        result_text += f"\n‚è∞ **–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:** —Ç–æ–ª—å–∫–æ —á—Ç–æ"
        
        await status_msg.edit_text(result_text, parse_mode="Markdown")
        
    except PermissionDenied:
        await message.reply(
            "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!**\n\n"
            "–û–±–Ω–æ–≤–ª—è—Ç—å –≤—Å–µ –∫–ª–∞–Ω—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞."
        )
    except Exception as e:
        logger.error(f"Error in update_all_clans_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–Ω–æ–≤**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("clan_analysis"))
async def clan_analysis_command(message: Message, command: CommandObject):
    """
    –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–ª–∞–Ω–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /clan_analysis [–Ω–æ–º–µ—Ä|—Ç–µ–≥]
    """
    try:
        db_service = get_clan_db_service()
        analysis_manager = get_clan_analysis_manager()
        
        clan = None
        
        if command.args:
            arg = command.args.strip()
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–≥—É
            if arg.startswith('#'):
                clan = await db_service.get_clan_by_tag(arg, message.chat.id)
            else:
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞
                try:
                    clan_number = int(arg)
                    clans = await db_service.get_chat_clans(message.chat.id)
                    
                    if 1 <= clan_number <= len(clans):
                        clan = clans[clan_number - 1]
                    else:
                        await message.reply(
                            f"‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞–Ω–∞!**\n\n"
                            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞–Ω—ã: 1-{len(clans)}"
                        )
                        return
                except ValueError:
                    await message.reply(
                        "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!**\n\n"
                        "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/clan_analysis [–Ω–æ–º–µ—Ä|—Ç–µ–≥]`"
                    )
                    return
        else:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω
            settings = await db_service.get_chat_settings(message.chat.id)
            if settings.default_clan_id:
                clan = await db_service.get_clan_by_id(settings.default_clan_id)
            else:
                await message.reply(
                    "‚ùå **–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/clan_analysis <–Ω–æ–º–µ—Ä>` –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞–Ω–∞."
                )
                return
        
        if not clan:
            await message.reply("‚ùå **–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!**")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞
        status_msg = await message.reply(
            f"üîç **–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–ª–∞–Ω {clan.clan_name}...**\n\n"
            "‚è≥ –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ–≤–æ–∂—É –∞–Ω–∞–ª–∏–∑...\n"
            "üìä –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥..."
        )
        
        # –ü—Ä–æ–≤–æ–¥–∏–º –∞–Ω–∞–ª–∏–∑
        analysis = await analysis_manager.analyze_clan_performance(
            clan.clan_tag, message.chat.id
        )
        
        if 'error' in analysis:
            await status_msg.edit_text(
                f"‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞**\n\n{analysis['error']}"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = await analysis_manager.get_clan_recommendations(
            clan.clan_tag, message.chat.id
        )
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
        clan_info = analysis['clan_info']
        activity = analysis['activity']
        health = analysis['health']
        donations = analysis['donations']
        
        text = (
            f"üî¨ **–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–ª–∞–Ω–∞**\n\n"
            f"üè∞ **{clan_info['name']}** `{clan_info['tag']}`\n\n"
            
            f"**üéØ –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞:**\n"
            f"‚Ä¢ {health['status_emoji']} –°—Ç–∞—Ç—É—Å: {health['status']}\n"
            f"‚Ä¢ üìä –ó–¥–æ—Ä–æ–≤—å–µ –∫–ª–∞–Ω–∞: {health['health_score']}/100\n"
            f"‚Ä¢ ‚ö° –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {activity['activity_score']}/100\n\n"
            
            f"**üë• –°–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞:**\n"
            f"‚Ä¢ üë§ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {clan_info['member_count']}/50\n"
            f"‚Ä¢ üéØ –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å: {activity['avg_level']}\n"
            f"‚Ä¢ üî• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {activity['active_members']}\n\n"
            
            f"**üíù –î–æ–Ω–∞—Ç—ã:**\n"
            f"‚Ä¢ üì§ –û—Ç–¥–∞–Ω–æ: {format_number(donations['total_donated'])}\n"
            f"‚Ä¢ üì• –ü–æ–ª—É—á–µ–Ω–æ: {format_number(donations['total_received'])}\n"
            f"‚Ä¢ üìä –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {donations['efficiency_ratio']:.2f}\n\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã
        if health['issues']:
            text += "**‚ö†Ô∏è –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**\n"
            for issue in health['issues'][:3]:
                text += f"‚Ä¢ {issue}\n"
            text += "\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if recommendations:
            text += "**üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n"
            for rec in recommendations[:5]:  # –¢–æ–ø 5 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                text += f"‚Ä¢ {rec}\n"
        
        text += f"\nüìÖ **–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:** {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        
        await status_msg.edit_text(text, parse_mode="Markdown")
        
    except Exception as e:
        logger.error(f"Error in clan_analysis_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–ª–∞–Ω–∞**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


@clan_router.message(Command("compare_clans"))
async def compare_clans_command(message: Message, command: CommandObject):
    """
    –°—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–∞ –∫–ª–∞–Ω–∞
    –°–∏–Ω—Ç–∞–∫—Å–∏—Å: /compare_clans <–Ω–æ–º–µ—Ä1|—Ç–µ–≥1> <–Ω–æ–º–µ—Ä2|—Ç–µ–≥2>
    """
    try:
        if not command.args:
            await message.reply(
                "‚ùå **–£–∫–∞–∂–∏—Ç–µ –¥–≤–∞ –∫–ª–∞–Ω–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è!**\n\n"
                "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/compare_clans <–∫–ª–∞–Ω1> <–∫–ª–∞–Ω2>`\n\n"
                "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
                "‚Ä¢ `/compare_clans 1 2` - —Å—Ä–∞–≤–Ω–∏—Ç—å –ø–µ—Ä–≤—ã–π –∏ –≤—Ç–æ—Ä–æ–π –∫–ª–∞–Ω—ã\n"
                "‚Ä¢ `/compare_clans #ABC123 #DEF456` - –ø–æ —Ç–µ–≥–∞–º\n"
                "‚Ä¢ `/compare_clans 1 #DEF456` - —Å–º–µ—à–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
            )
            return
        
        args = command.args.strip().split()
        if len(args) != 2:
            await message.reply(
                "‚ùå **–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ä–æ–≤–Ω–æ –¥–≤–∞ –∫–ª–∞–Ω–∞!**\n\n"
                "–ü—Ä–∏–º–µ—Ä: `/compare_clans 1 2`"
            )
            return
        
        db_service = get_clan_db_service()
        analysis_manager = get_clan_analysis_manager()
        
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª–∞–Ω–∞
        async def find_clan(arg: str):
            if arg.startswith('#'):
                return await db_service.get_clan_by_tag(arg, message.chat.id)
            else:
                try:
                    clan_number = int(arg)
                    clans = await db_service.get_chat_clans(message.chat.id)
                    if 1 <= clan_number <= len(clans):
                        return clans[clan_number - 1]
                except ValueError:
                    pass
            return None
        
        clan1 = await find_clan(args[0])
        clan2 = await find_clan(args[1])
        
        if not clan1:
            await message.reply(f"‚ùå **–ö–ª–∞–Ω '{args[0]}' –Ω–µ –Ω–∞–π–¥–µ–Ω!**")
            return
        
        if not clan2:
            await message.reply(f"‚ùå **–ö–ª–∞–Ω '{args[1]}' –Ω–µ –Ω–∞–π–¥–µ–Ω!**")
            return
        
        if clan1.id == clan2.id:
            await message.reply("‚ùå **–ù–µ–ª—å–∑—è —Å—Ä–∞–≤–Ω–∏—Ç—å –∫–ª–∞–Ω —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!**")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        status_msg = await message.reply(
            f"‚öîÔ∏è **–°—Ä–∞–≤–Ω–∏–≤–∞—é –∫–ª–∞–Ω—ã...**\n\n"
            f"üè∞ {clan1.clan_name} vs {clan2.clan_name}\n"
            "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ..."
        )
        
        # –ü—Ä–æ–≤–æ–¥–∏–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        comparison = await analysis_manager.compare_clans(
            clan1.clan_tag, clan2.clan_tag, message.chat.id
        )
        
        if 'error' in comparison:
            await status_msg.edit_text(f"‚ùå **–û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:** {comparison['error']}")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        clan1_info = comparison['clan1']
        clan2_info = comparison['clan2']
        winners = comparison['winner_categories']
        
        text = f"‚öîÔ∏è **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–≤**\n\n"
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
        def get_winner_emoji(category):
            winner = winners.get(category, 0)
            if winner == 1:
                return "ü•á", "ü•à"
            elif winner == 2:
                return "ü•à", "ü•á"
            else:
                return "ü§ù", "ü§ù"
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
        categories = [
            ('points', '–û—á–∫–∏ –∫–ª–∞–Ω–∞', clan1_info['points'], clan2_info['points']),
            ('level', '–£—Ä–æ–≤–µ–Ω—å', clan1_info['level'], clan2_info['level']),
            ('members', '–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤', clan1_info['member_count'], clan2_info['member_count'])
        ]
        
        for cat_key, cat_name, val1, val2 in categories:
            emoji1, emoji2 = get_winner_emoji(cat_key)
            text += f"**üèÜ {cat_name}:**\n"
            text += f"{emoji1} {clan1_info['name']}: {format_number(val1) if cat_key == 'points' else val1}\n"
            text += f"{emoji2} {clan2_info['name']}: {format_number(val2) if cat_key == 'points' else val2}\n\n"
        
        # –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        summary = comparison['summary']
        overall_winner = comparison.get('overall_winner', 0)
        
        if overall_winner == 1:
            text += f"üéâ **–û–±—â–∏–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:** {clan1_info['name']}\n"
        elif overall_winner == 2:
            text += f"üéâ **–û–±—â–∏–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:** {clan2_info['name']}\n"
        else:
            text += f"ü§ù **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ù–∏—á—å—è!\n"
        
        text += f"üìä **–°—á–µ—Ç:** {summary['clan1_wins']} - {summary['clan2_wins']}"
        
        await status_msg.edit_text(text, parse_mode="Markdown")
        
    except Exception as e:
        logger.error(f"Error in compare_clans_command: {e}")
        await message.reply(
            "‚ùå **–û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–ª–∞–Ω–æ–≤**\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )